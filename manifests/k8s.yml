---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: scrob
    role: web
  name: scrob-svc
  namespace: scrob-production
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: scrob
    role: web
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: scrob
    role: web
  name: scrob-sa
  namespace: scrob-production
---
apiVersion: v1
data:
  RAILS_LOG_TO_STDOUT: 'yes'
  DATABASE_URL: nulldb://nohost
kind: ConfigMap
metadata:
  name: scrob-config
  namespace: scrob-production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    getkuby.io/dockerfile-checksum: eeb9d4088136e2cf9c23b08a876ce4d0258030c059a779adea9753680c75501a
  labels:
    app: scrob
    role: web
  name: scrob-web
  namespace: scrob-production
spec:
  replicas: 0
  selector:
    matchLabels:
      app: scrob
      role: web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: scrob
        role: web
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: scrob-config
        - secretRef:
            name: scrob-secrets
        image: img.hephy.pro/scrob/web:20230226154611
        imagePullPolicy: IfNotPresent
        name: scrob-web
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: "/healthz"
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
      imagePullSecrets:
      - name: scrob-registry-secret
      initContainers:
      - command:
        - bundle
        - exec
        - rake
        - kuby:rails_app:db:create_unless_exists
        envFrom:
        - configMapRef:
            name: scrob-config
        - secretRef:
            name: scrob-secrets
        image: img.hephy.pro/scrob/web:20230226154611
        name: scrob-create-db
      - command:
        - bundle
        - exec
        - rake
        - db:migrate
        envFrom:
        - configMapRef:
            name: scrob-config
        - secretRef:
            name: scrob-secrets
        image: img.hephy.pro/scrob/web:20230226154611
        name: scrob-migrate-db
      restartPolicy: Always
      serviceAccountName: scrob-sa
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrob-ingress
  namespace: scrob-production
spec:
  ingressClassName: public
  rules:
  - host: scrob.hephy.pro
    http:
      paths:
      - backend:
          service:
            name: scrob-svc
            port:
              number: 8080
        path: "/"
        pathType: Prefix
  - host: scrob.hephy.pro
    http:
      paths:
      - backend:
          service:
            name: scrob-assets-svc
            port:
              number: 8082
        path: "/assets"
        pathType: Prefix
      - backend:
          service:
            name: scrob-assets-svc
            port:
              number: 8082
        path: "/packs"
        pathType: Prefix
  tls:
  - hosts:
    - scrob.hephy.pro
    secretName: scrob-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: scrob
    role: assets
  name: scrob-assets-svc
  namespace: scrob-production
spec:
  ports:
  - name: http
    port: 8082
    protocol: TCP
    targetPort: http
  selector:
    app: scrob
    role: assets
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: scrob
    role: assets
  name: scrob-assets-sa
  namespace: scrob-production
---
apiVersion: v1
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile           on;
      keepalive_timeout  65;
      gzip               on;

      server {
        listen 8082;
        server_name localhost;

        location / {
          root /usr/share/nginx/assets/current;
        }

        error_page   500 502 503 504  /500.html;
      }
    }
kind: ConfigMap
metadata:
  name: scrob-assets-nginx-config
  namespace: scrob-production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: scrob
    role: assets
  name: scrob-assets
  namespace: scrob-production
spec:
  replicas: 0
  selector:
    matchLabels:
      app: scrob
      role: assets
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: scrob
        role: assets
    spec:
      containers:
      - image: img.hephy.pro/scrob/web:20230226154611-assets
        imagePullPolicy: IfNotPresent
        name: scrob-assets
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: "/500.html"
            port: 8082
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: "/etc/nginx/nginx.conf"
          name: nginx-config
          subPath: nginx.conf
      imagePullSecrets:
      - name: scrob-registry-secret
      restartPolicy: Always
      serviceAccountName: scrob-assets-sa
      volumes:
      - configMap:
          name: scrob-assets-nginx-config
        name: nginx-config
